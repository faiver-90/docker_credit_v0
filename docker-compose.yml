version: '3.8'

services:
  web:
    build: .
    #    command: ./gunicorn_start.sh
    #    command: gunicorn app_v0.wsgi:application --bind 0.0.0.0:8000 --reload
    command: >
      sh -c "python manage.py makemigrations &&
             python manage.py migrate &&
             rm -rf /var/www/motor_finance/staticfiles &&
             python manage.py collectstatic --noinput &&
             python manage.py runserver 0.0.0.0:8000 2>> /var/www/motor_finance/log_storage/debug/django_output.log"
    volumes:
      - .:/var/www/motor_finance
      - static_volume:/var/www/motor_finance/static
    env_file:
      - .env
    depends_on:
      - db
      - redis
    restart: always
    networks:
      - my_network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites-enabled:/etc/nginx/sites-enabled
      - .:/var/www/motor_finance
    ports:
      - "80:80"
    depends_on:
      - web
    networks:
      - my_network
    restart: always

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: credit
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306"
    networks:
      - my_network

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    restart: always
    networks:
      - my_network

  celery:
    build: .
    command: celery -A app_v0 worker --loglevel=info
    volumes:
      - .:/var/www/motor_finance
    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: always
    networks:
      - my_network

  celery-beat:
    build: .
    command: celery -A app_v0 beat --loglevel=info --queues=celery
    volumes:
      - .:/var/www/motor_finance
    env_file:
      - .env
    depends_on:
      - redis
      - db
    restart: always
    networks:
      - my_network

networks:
  my_network:
    driver: bridge

volumes:
  mysql_data:
  redis_data:
  static_volume:
