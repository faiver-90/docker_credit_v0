# Generated by Django 5.1 on 2024-09-16 11:14

import apps.questionnaire.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=255, unique=True, verbose_name='Код вида деятельности')),
            ],
            options={
                'verbose_name': 'Код вида деятельности',
                'verbose_name_plural': 'Коды видов деятельности',
            },
        ),
        migrations.CreateModel(
            name='CarBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Марка автомобиля')),
            ],
            options={
                'verbose_name': 'Марка автомобиля',
                'verbose_name_plural': 'Марки автомобилей',
            },
        ),
        migrations.CreateModel(
            name='CarCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(max_length=50, unique=True, verbose_name='Состояние автомобиля')),
            ],
            options={
                'verbose_name': 'Состояние автомобиля',
                'verbose_name_plural': 'Состояния автомобилей',
            },
        ),
        migrations.CreateModel(
            name='CarConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('configuration', models.CharField(max_length=50, unique=True, verbose_name='Комплектация автомобиля')),
            ],
            options={
                'verbose_name': 'Комплектация автомобиля',
                'verbose_name_plural': 'Комплектации автомобилей',
            },
        ),
        migrations.CreateModel(
            name='ClientPreData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_to_contact_pre_client', models.CharField(blank=True, max_length=255, null=True, verbose_name='Обращение')),
                ('type_pre_client', models.CharField(blank=True, default='Физическое лицо', max_length=255, null=True, verbose_name='Тип клиента')),
                ('product_pre_client', models.CharField(blank=True, default='Кредит', max_length=255, null=True, verbose_name='Продукт')),
                ('phone_number_pre_client', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона')),
                ('total_loan_amount', models.CharField(blank=True, max_length=255, null=True)),
                ('car_price_display', models.CharField(blank=True, max_length=255, null=True)),
                ('additional_equipment_price_display', models.CharField(blank=True, max_length=255, null=True)),
                ('partner_offers_shown', models.BooleanField(default=False, verbose_name='Показаны партнерские предложения')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Название страны')),
            ],
            options={
                'verbose_name': 'Страна',
                'verbose_name_plural': 'Страны',
            },
        ),
        migrations.CreateModel(
            name='Dealership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название дилерского центра')),
                ('organisation_name', models.CharField(max_length=255, verbose_name='Название организации')),
            ],
            options={
                'verbose_name': 'Дилерский центр',
                'verbose_name_plural': 'Дилерские центры',
            },
        ),
        migrations.CreateModel(
            name='DocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=50, unique=True, verbose_name='Тип документа')),
            ],
            options={
                'verbose_name': 'Тип документа',
                'verbose_name_plural': 'Типы документов',
            },
        ),
        migrations.CreateModel(
            name='EcoClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Название')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Экологический класс',
                'verbose_name_plural': 'Экологические классы',
            },
        ),
        migrations.CreateModel(
            name='EducationLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=255, unique=True, verbose_name='Уровень образования')),
            ],
            options={
                'verbose_name': 'Уровень образования',
                'verbose_name_plural': 'Уровни образования',
            },
        ),
        migrations.CreateModel(
            name='EngineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_type', models.CharField(max_length=50, unique=True, verbose_name='Тип двигателя')),
            ],
            options={
                'verbose_name': 'Тип двигателя',
                'verbose_name_plural': 'Типы двигателей',
            },
        ),
        migrations.CreateModel(
            name='FinancingTerm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=255, unique=True, verbose_name='Срок финансирования')),
            ],
            options={
                'verbose_name': 'Срок финансирования',
                'verbose_name_plural': 'Сроки финансирования',
            },
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=255, unique=True, verbose_name='Пол')),
            ],
            options={
                'verbose_name': 'Пол',
                'verbose_name_plural': 'Пола',
            },
        ),
        migrations.CreateModel(
            name='HousingType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, unique=True, verbose_name='Тип жилья')),
            ],
            options={
                'verbose_name': 'Тип жилья',
                'verbose_name_plural': 'Типы жилья',
            },
        ),
        migrations.CreateModel(
            name='MaritalStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255, unique=True, verbose_name='Семейное положение')),
            ],
            options={
                'verbose_name': 'Семейное положение',
                'verbose_name_plural': 'Семейные положения',
            },
        ),
        migrations.CreateModel(
            name='Offers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('name_bank', models.CharField(max_length=255)),
                ('term', models.IntegerField()),
                ('stavka', models.CharField(max_length=255)),
                ('pay', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name': 'Предложение',
                'verbose_name_plural': 'Предложения',
            },
        ),
        migrations.CreateModel(
            name='OrganizationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, unique=True, verbose_name='Тип организации')),
            ],
            options={
                'verbose_name': 'Тип организации',
                'verbose_name_plural': 'Типы организаций',
            },
        ),
        migrations.CreateModel(
            name='PhoneType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_type', models.CharField(max_length=50, unique=True, verbose_name='Тип телефона')),
            ],
            options={
                'verbose_name': 'Тип телефона',
                'verbose_name_plural': 'Типы телефонов',
            },
        ),
        migrations.CreateModel(
            name='PositionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, unique=True, verbose_name='Тип должности')),
            ],
            options={
                'verbose_name': 'Тип должности',
                'verbose_name_plural': 'Типы должностей',
            },
        ),
        migrations.CreateModel(
            name='PurchaseMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('method', models.CharField(max_length=255, unique=True, verbose_name='Способ приобретения')),
            ],
            options={
                'verbose_name': 'Способ приобретения',
                'verbose_name_plural': 'Способы приобретения',
            },
        ),
        migrations.CreateModel(
            name='RealEstateType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=255, unique=True, verbose_name='Тип недвижимости')),
            ],
            options={
                'verbose_name': 'Тип недвижимости',
                'verbose_name_plural': 'Типы недвижимости',
            },
        ),
        migrations.CreateModel(
            name='SocialStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255, unique=True, verbose_name='Социальный статус')),
            ],
            options={
                'verbose_name': 'Социальный статус',
                'verbose_name_plural': 'Социальные статусы',
            },
        ),
        migrations.CreateModel(
            name='TypePts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pts_type', models.CharField(max_length=50, unique=True, verbose_name='Тип ПТС')),
            ],
            options={
                'verbose_name': 'Тип ПТС',
                'verbose_name_plural': 'Типы ПТС',
            },
        ),
        migrations.CreateModel(
            name='UserDocumentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_type', models.CharField(max_length=50, unique=True, verbose_name='Тип документа')),
            ],
            options={
                'verbose_name': 'Тип документа пользователя',
                'verbose_name_plural': 'Типы документов пользователей',
            },
        ),
        migrations.CreateModel(
            name='ClientCarInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_car_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Модель')),
                ('configuration_car_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Комплектация')),
                ('year_car_info', models.CharField(blank=True, max_length=4, null=True, verbose_name='Год')),
                ('engine_volume_car_info', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Объем двигателя')),
                ('power_car_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Мощность (Л.С.)')),
                ('color_car_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цвет')),
                ('mileage_car_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Пробег')),
                ('vin_car_info', models.CharField(blank=True, max_length=17, null=True, verbose_name='VIN')),
                ('car_price_car_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цена автомобиля')),
                ('dealer_equipment_price_car_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цена доп. оборудования от дилера')),
                ('price_date_car_info', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата формирования цены')),
                ('body_number_car_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер кузова')),
                ('engine_number_car_info', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер двигателя')),
                ('brand_car_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.carbrand', verbose_name='Марка')),
                ('condition_car_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.carcondition', verbose_name='Состояние')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_info', to='questionnaire.clientpredata')),
                ('eco_class_car_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.ecoclass', verbose_name='Экологический класс')),
                ('engine_type_car_info', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.enginetype', verbose_name='Тип двигателя')),
            ],
            options={
                'verbose_name': 'Информация о машине',
                'verbose_name_plural': 'Информация о машинах',
            },
        ),
        migrations.CreateModel(
            name='ClientPensionCertificate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_pension_sert', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pension_certificate', to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Пенсионное свидетельство клиента',
                'verbose_name_plural': 'Пенсионные свидетельства клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientPassport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series_number_passport', models.CharField(blank=True, max_length=20, null=True, verbose_name='Серия и номер')),
                ('issue_date_passport', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('division_code_passport', models.CharField(blank=True, max_length=10, null=True, verbose_name='Код подразделения')),
                ('issued_by_passport', models.CharField(blank=True, max_length=200, null=True, verbose_name='Кем выдан')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='passport_data', to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Паспортные данные клиента',
                'verbose_name_plural': 'Паспортные данные клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_id', models.IntegerField()),
                ('title_offer', models.CharField(max_length=255)),
                ('name_bank_offer', models.CharField(max_length=255)),
                ('term_offer', models.IntegerField()),
                ('stavka_offer', models.CharField(max_length=255)),
                ('pay_offer', models.CharField(max_length=255)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Предложение клиента',
                'verbose_name_plural': 'Предложения клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientInternationalPassport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series_number_international_passport', models.CharField(blank=True, max_length=20, null=True, verbose_name='Серия и номер')),
                ('issue_date_international_passport', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('issued_by_international_passport', models.CharField(blank=True, max_length=200, null=True, verbose_name='Кем выдан')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='international_passport', to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Загранпаспорт клиента',
                'verbose_name_plural': 'Загранпаспорта клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientFinancingCondition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('initial_payment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Первоначальный взнос')),
                ('monthly_payment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ежемесячный платеж')),
                ('deferred_payment', models.BooleanField(default=False, verbose_name='Отложенный платеж')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financing_conditions', to='questionnaire.clientpredata')),
                ('financing_term', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.financingterm', verbose_name='Срок финансирования')),
            ],
            options={
                'verbose_name': 'Условия финансирования',
                'verbose_name_plural': 'Условия финансирования',
            },
        ),
        migrations.CreateModel(
            name='ClientFinancialInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('income_amount', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сумма дохода')),
                ('confirmed_income_amount', models.CharField(blank=True, max_length=255, null=True, verbose_name='Подтвержденная сумма')),
                ('income_proof_document', models.CharField(blank=True, max_length=255, null=True, verbose_name='Документ подтверждающий доход')),
                ('income_source', models.CharField(blank=True, max_length=255, null=True, verbose_name='Источник доходов')),
                ('disposable_income', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сумма которую вы можете выделять')),
                ('spouse_income', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сумма доходов супруга')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='financial_info', to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Финансовая информация клиента',
                'verbose_name_plural': 'Финансовая информация клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientExtraInsurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kasko_amount', models.CharField(blank=True, default=0, max_length=255, null=True, verbose_name='КАСКО')),
                ('kasko_amount_include', models.BooleanField(default=False, verbose_name='Добавить в счет кредита КАСКО')),
                ('gap_amount', models.CharField(blank=True, default=0, max_length=255, null=True, verbose_name='GAP')),
                ('gap_amount_include', models.BooleanField(default=False, verbose_name='Добавить в счет кредита GAP')),
                ('szh_amount', models.CharField(blank=True, default=0, max_length=255, null=True, verbose_name='Страхование жизни')),
                ('szh_term', models.CharField(blank=True, max_length=255, null=True, verbose_name='Срок')),
                ('szh_term_include', models.BooleanField(default=False, verbose_name='Добавить в счет кредита СЖ')),
                ('financial_products_amount', models.CharField(blank=True, max_length=255, null=True, verbose_name='Финансовые продукты')),
                ('financial_products_amount_include', models.BooleanField(blank=True, max_length=255, null=True, verbose_name='Добавить в счет кредита Фин. продукты')),
                ('installment_commission_include', models.BooleanField(blank=True, default=False, null=True, verbose_name='Снижение процента')),
                ('sms_notification_include', models.BooleanField(blank=True, default=False, null=True, verbose_name='СМС информирование')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_insurance', to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Дополнительное страхование',
                'verbose_name_plural': 'Дополнительные страхования',
            },
        ),
        migrations.CreateModel(
            name='ClientExpenses',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mandatory_payments', models.CharField(blank=True, max_length=255, null=True, verbose_name='Обязательные платежи в месяц')),
                ('loan_payments', models.CharField(blank=True, max_length=255, null=True, verbose_name='Платежи по кредитам')),
                ('mortgage_payments', models.CharField(blank=True, max_length=255, null=True, verbose_name='Платежи по ипотеке')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Расходы клиента',
                'verbose_name_plural': 'Расходы клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientDriverLicense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series_number_driver_license', models.CharField(blank=True, max_length=20, null=True, verbose_name='Серия и номер')),
                ('issue_date_driver_license', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('issued_by_driver_license', models.CharField(blank=True, max_length=200, null=True, verbose_name='Кем выдан')),
                ('experience_start_date_driver_license', models.DateField(blank=True, null=True, verbose_name='Стаж (дата выдачи первого ВУ)')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='driver_license_data', to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Водительское удостоверение клиента',
                'verbose_name_plural': 'Водительские удостоверения клиентов',
            },
        ),
        migrations.CreateModel(
            name='AutoSaleDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pts_number_sale_auto', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер ПТС')),
                ('pts_issue_sale_auto', models.DateField(blank=True, null=True, verbose_name='Дата выдачи ПТС')),
                ('pts_issued_by_sale_auto', models.CharField(blank=True, max_length=255, null=True, verbose_name='Кем выдан ПТС')),
                ('pts_name_sale_auto', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название ТС по ПТС')),
                ('dcp_number_sale_auto', models.CharField(blank=True, max_length=255, null=True, verbose_name='Номер ДКП')),
                ('dcp_issue_date_sale_auto', models.DateField(blank=True, null=True, verbose_name='Дата выдачи ДКП')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='questionnaire.clientpredata')),
                ('pts_type_sale_auto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.typepts', verbose_name='Тип ПТС')),
            ],
            options={
                'verbose_name': 'Документ продажи автомобиля',
                'verbose_name_plural': 'Документы продажи автомобилей',
            },
        ),
        migrations.CreateModel(
            name='AllApplications',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('type_all_app', models.CharField(blank=True, max_length=255, null=True)),
                ('financing', models.CharField(blank=True, max_length=255, null=True)),
                ('manager', models.CharField(blank=True, max_length=255, null=True)),
                ('dealership_all_app', models.CharField(blank=True, max_length=255, null=True)),
                ('organization', models.CharField(blank=True, max_length=255, null=True)),
                ('date_create_all_app', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_changes_all_app', models.DateTimeField(auto_now=True, null=True)),
                ('documents', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.autosaledocument')),
                ('car_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.clientcarinfo')),
                ('extra_insurance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.clientextrainsurance')),
                ('financing_conditions', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.clientfinancingcondition')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
            },
        ),
        migrations.CreateModel(
            name='ClientTaxDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('series_number_tax_document', models.CharField(blank=True, max_length=20, null=True, verbose_name='Серия и номер')),
                ('number_tax_document', models.CharField(blank=True, max_length=20, null=True, verbose_name='ИНН')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tax_document', to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Налоговый документ клиента',
                'verbose_name_plural': 'Налоговые документы клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientCitizenship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('russian_citizenship', models.BooleanField(blank=True, default=False, null=True, verbose_name='Гражданство Россия, единственно')),
                ('residence_permit', models.BooleanField(blank=True, default=False, null=True, verbose_name='Вид на жительство в другой стране')),
                ('us_citizenship', models.BooleanField(blank=True, default=False, null=True, verbose_name='Гражданство США')),
                ('birth_place_citizenship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Место рождения')),
                ('tax_resident_foreign', models.BooleanField(blank=True, default=False, null=True, verbose_name='Налоговый резидент иностранного государства')),
                ('tax_residence_countries', models.CharField(blank=True, max_length=255, null=True, verbose_name='Страны налогового резиденства')),
                ('foreign_inn', models.CharField(blank=True, max_length=20, null=True, verbose_name='ИНН иностранного государства')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citizenship', to='questionnaire.clientpredata')),
                ('birth_country_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.country', verbose_name='Страна рождения')),
            ],
            options={
                'verbose_name': 'Гражданство клиента',
                'verbose_name_plural': 'Гражданства клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientDocument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('document_file', models.FileField(upload_to=apps.questionnaire.models.upload_to, verbose_name='Выбрать файл')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.clientpredata')),
                ('document_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.documenttype', verbose_name='Тип документа')),
            ],
            options={
                'verbose_name': 'Загруженный документ клиента',
                'verbose_name_plural': 'Загруженные документы клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='questionnaire.clientpredata')),
                ('education_level_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.educationlevel', verbose_name='Уровень образования')),
            ],
            options={
                'verbose_name': 'Образование клиента',
                'verbose_name_plural': 'Образование клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientFamilyInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('children_under_18', models.IntegerField(blank=True, null=True, verbose_name='Дети до 18 лет')),
                ('dependents', models.IntegerField(blank=True, null=True, verbose_name='Иждивенцы')),
                ('years_married', models.IntegerField(blank=True, null=True, verbose_name='Количество лет в браке')),
                ('official_position_relative', models.BooleanField(default=False, verbose_name='Должностное лицо (родственник)')),
                ('degree_of_kinship', models.CharField(blank=True, max_length=255, null=True, verbose_name='Степень родства')),
                ('relative_position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Должность и место работы')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='family_info', to='questionnaire.clientpredata')),
                ('marital_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.maritalstatus', verbose_name='Семейное положение')),
            ],
            options={
                'verbose_name': 'Семейная информация клиента',
                'verbose_name_plural': 'Семейная информация клиентов',
            },
        ),
        migrations.AddField(
            model_name='clientpredata',
            name='type_phone_pre_client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.phonetype', verbose_name='Тип телефона'),
        ),
        migrations.CreateModel(
            name='ClientContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('living_address_contact', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес проживания')),
                ('living_start_date_contact', models.DateField(blank=True, null=True, verbose_name='Дата начала проживания')),
                ('phone_number_contact', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона')),
                ('email_contact', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('notes_contact', models.TextField(blank=True, null=True, verbose_name='Примечание')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contact_data', to='questionnaire.clientpredata')),
                ('housing_type_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.housingtype', verbose_name='Тип жилья')),
                ('phone_type_contact', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.phonetype', verbose_name='Тип телефона')),
            ],
            options={
                'verbose_name': 'Контактные данные клиента',
                'verbose_name_plural': 'Контактные данные клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientEmployment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('organization_inn', models.CharField(blank=True, max_length=20, null=True, verbose_name='ИНН организации')),
                ('organization_form', models.CharField(blank=True, max_length=255, null=True, verbose_name='Форма организации (чем занимается)')),
                ('organization_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Юр. название')),
                ('position', models.CharField(blank=True, max_length=255, null=True, verbose_name='Наименование должности')),
                ('registration_address_employment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес регистрации')),
                ('phone_number_organization', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона')),
                ('current_experience', models.CharField(blank=True, max_length=255, null=True, verbose_name='Стаж на текущем месте')),
                ('total_experience', models.CharField(blank=True, max_length=255, null=True, verbose_name='Стаж общий')),
                ('shift_method', models.BooleanField(blank=True, default=False, null=True, verbose_name='Работа вахтовым методом')),
                ('official_position', models.BooleanField(blank=True, default=False, null=True, verbose_name='Должностное лицо')),
                ('activity_code', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.activitycode', verbose_name='Код вида деятельности')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employment', to='questionnaire.clientpredata')),
                ('organization_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.organizationtype', verbose_name='Тип организации')),
                ('position_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.positiontype', verbose_name='Тип должности')),
            ],
            options={
                'verbose_name': 'Трудоустройство клиента',
                'verbose_name_plural': 'Трудоустройство клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientVehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_vehicle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Марка')),
                ('year_vehicle', models.IntegerField(blank=True, null=True, verbose_name='Год')),
                ('model_vehicle', models.CharField(blank=True, max_length=255, null=True, verbose_name='Модель')),
                ('purchase_year', models.IntegerField(blank=True, null=True, verbose_name='Год приобретения')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicle', to='questionnaire.clientpredata')),
                ('purchase_method_vehicle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.purchasemethod', verbose_name='Способ приобретения')),
            ],
            options={
                'verbose_name': 'Транспортное средство клиента',
                'verbose_name_plural': 'Транспортные средства клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientRealEstate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_real_estate', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('matches_registration_address_real_estate', models.BooleanField(default=False, verbose_name='Совпадает с местом регистрации')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='real_estate', to='questionnaire.clientpredata')),
                ('purchase_method_real_estate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.purchasemethod', verbose_name='Способ приобретения')),
                ('real_estate_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.realestatetype', verbose_name='Тип недвижимости')),
            ],
            options={
                'verbose_name': 'Недвижимость клиента',
                'verbose_name_plural': 'Недвижимость клиентов',
            },
        ),
        migrations.CreateModel(
            name='SelectedClientOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('offer_id', models.IntegerField(blank=True, null=True)),
                ('total_loan_amount_select', models.CharField(blank=True, max_length=255, null=True, verbose_name='Сумма кредита')),
                ('car_price_display_select', models.CharField(blank=True, max_length=255, null=True, verbose_name='Цена автомобиля')),
                ('initial_payment_select', models.CharField(blank=True, max_length=255, null=True, verbose_name='Первоначальный взнос')),
                ('term_select', models.CharField(blank=True, max_length=255, null=True, verbose_name='Срок кредита')),
                ('title_select', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название предложения')),
                ('monthly_payment_select', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ежемесячный платеж')),
                ('stavka_select', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ставка')),
                ('name_bank_select', models.CharField(blank=True, max_length=255, null=True, verbose_name='Название банка')),
                ('status_select_offer', models.CharField(blank=True, max_length=255, null=True)),
                ('info_from_bank', models.CharField(blank=True, max_length=255, null=True)),
                ('id_app_bank', models.CharField(blank=True, max_length=255, null=True)),
                ('id_app_in_system', models.IntegerField(blank=True, default=0, null=True)),
                ('link_to_detail_from_bank', models.CharField(blank=True, max_length=255, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='questionnaire.clientpredata')),
            ],
            options={
                'verbose_name': 'Выбранное предложение клиента',
                'verbose_name_plural': 'Выбранные предложения клиентов',
            },
        ),
        migrations.CreateModel(
            name='ClientPersonalInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_to_contact_client', models.CharField(blank=True, max_length=255, null=True, verbose_name='Обращение')),
                ('first_name_client', models.CharField(blank=True, max_length=255, null=True, verbose_name='Имя')),
                ('last_name_client', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('middle_name_client', models.CharField(blank=True, max_length=255, null=True, verbose_name='Отчество')),
                ('type_client', models.CharField(blank=True, default='Физическое лицо', max_length=255, null=True, verbose_name='Тип')),
                ('product_client', models.CharField(blank=True, default='Кредит', max_length=255, null=True, verbose_name='Продукт')),
                ('birth_date_client', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('registration_address_client', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес регистрации')),
                ('registration_date_client', models.DateField(blank=True, null=True, verbose_name='Дата регистрации')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_person_data', to='questionnaire.clientpredata')),
                ('gender_choice_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.gender', verbose_name='Пол')),
                ('housing_type_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.housingtype', verbose_name='Тип жилья')),
                ('social_status_client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='questionnaire.socialstatus', verbose_name='Социальный статус')),
            ],
            options={
                'verbose_name': 'Личная информация клиента',
                'verbose_name_plural': 'Личная информация клиентов',
            },
        ),
        # migrations.CreateModel(
        #     name='UserDocument',
        #     fields=[
        #         ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #         ('document_file', models.FileField(upload_to=apps.questionnaire.models.user_upload_to, verbose_name='Выбрать файл')),
        #         ('uploaded_at', models.DateTimeField(auto_now_add=True)),
        #         ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
        #         ('document_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionnaire.userdocumenttype', verbose_name='Тип документа')),
        #     ],
        #     options={
        #         'verbose_name': 'Загруженный документ пользователя',
        #         'verbose_name_plural': 'Загруженные документы пользователей',
        #     },
        # ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_manager', models.CharField(max_length=30, null=True, verbose_name='Имя')),
                ('last_name_manager', models.CharField(max_length=30, null=True, verbose_name='Фамилия')),
                ('middle_name_manager', models.CharField(max_length=30, null=True, verbose_name='Отчество')),
                ('organization_manager', models.CharField(blank=True, max_length=255, null=True, verbose_name='Организация')),
                ('role_manager', models.CharField(max_length=50, verbose_name='Роль')),
                ('date_of_birth_manager', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('phone_number_manager', models.CharField(blank=True, max_length=20, null=True, verbose_name='Телефонный номер')),
                ('status_manager', models.BooleanField(default=True, verbose_name='Статус')),
                ('passport_series_manager', models.CharField(blank=True, max_length=10, null=True, verbose_name='Серия паспорта')),
                ('passport_number_manager', models.CharField(blank=True, max_length=10, null=True, verbose_name='Номер паспорта')),
                ('division_code_manager', models.CharField(blank=True, max_length=7, null=True, verbose_name='Код подразделения')),
                ('issued_by_manager', models.CharField(blank=True, max_length=255, null=True, verbose_name='Кем выдан')),
                ('issue_date_manager', models.DateField(blank=True, null=True, verbose_name='Дата выдачи')),
                ('active_dealership', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='active_profiles', to='questionnaire.dealership')),
                ('dealership_manager', models.ManyToManyField(blank=True, related_name='managed_profiles', to='questionnaire.dealership', verbose_name='Дилерский центр')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
    ]
