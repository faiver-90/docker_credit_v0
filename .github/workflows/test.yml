name: Run Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.2
        env:
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: credit
          MYSQL_USER: user
          MYSQL_PASSWORD: 1234
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      # Шаг 1: Клонирование репозитория
      - name: Checkout repository
        uses: actions/checkout@v2

      # Шаг 2: Установка Python
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Укажите нужную версию Python

      # Шаг 3: Установка зависимостей
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Шаг 4: Восстановление файла .env из секрета
      - name: Create .env file
        run: |
          echo "$ENV_FILE_CONTENT" > .env
        env:
          ENV_FILE_CONTENT: ${{ secrets.ENV_FILE_CONTENT }}

      # Шаг 5: Восстановление settings.py из секрета
      - name: Create settings.py
        run: |
          mkdir -p your_project_folder/  # Замените на реальную папку, где хранится settings.py
          echo "$SETTINGS_PY_CONTENT" > app_v0/settings.py
        env:
          SETTINGS_PY_CONTENT: ${{ secrets.SETTINGS_PY_CONTENT }}

      # Шаг 6: Создание папок и файлов для логов
      - name: Create log directories and files
        run: |
          # Создание директорий для логов
          mkdir -p /home/runner/work/docker_credit_v0/docker_credit_v0/log_storage/debug/
          mkdir -p /home/runner/work/docker_credit_v0/docker_credit_v0/log_storage/error/
          mkdir -p /home/runner/work/docker_credit_v0/docker_credit_v0/log_storage/info/

          # Создание файлов логов
          touch /home/runner/work/docker_credit_v0/docker_credit_v0/log_storage/debug/debug.log
          touch /home/runner/work/docker_credit_v0/docker_credit_v0/log_storage/debug/django_output.log
          touch /home/runner/work/docker_credit_v0/docker_credit_v0/log_storage/error/error.log
          touch /home/runner/work/docker_credit_v0/docker_credit_v0/log_storage/info/info.log
          touch /home/runner/work/docker_credit_v0/docker_credit_v0/log_storage/info/development.log

      # Шаг 7: Предоставление привилегий пользователю MySQL для создания БД
      - name: Grant MySQL Privileges for DB creation
        run: |
          docker exec $(docker ps -q --filter "ancestor=mysql:8.2") mysql -u root -p1234 -e "GRANT ALL PRIVILEGES ON *.* TO 'user'@'%' IDENTIFIED BY '1234' WITH GRANT OPTION; FLUSH PRIVILEGES;"

      # Шаг 8: Настройка переменных среды для MySQL
      - name: Set environment variables for MySQL
        run: |
          echo "DATABASE_NAME=credit" >> .env
          echo "DATABASE_USER=user" >> .env
          echo "DATABASE_PASSWORD=1234" >> .env
          echo "DATABASE_HOST=127.0.0.1" >> .env

      # Шаг 9: Запуск тестов
      - name: Run tests
        run: |
          pytest
        env:
          DJANGO_SETTINGS_MODULE: "app_v0.settings"
